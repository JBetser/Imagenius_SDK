<?xml version="1.0" encoding="utf-8"?>
<!-- 
    Note: As an alternative to hand editing this file you can use the 
    web admin tool to configure settings for your application. Use
    the Website->Asp.Net Configuration option in Visual Studio.
    A full list of settings and comments can be found in 
    machine.config.comments usually located in 
    \Windows\Microsoft.Net\Framework\v2.x\Config 
-->
<configuration>
	<configSections>
		<sectionGroup name="IGMadam">
			<section name="formsAuthenticationDisposition" type="IGMadam.FormsAuthenticationDispositionSectionHandler, IGMadam"/>
			<section name="userSecurityAuthority" type="System.Configuration.SingleTagSectionHandler, System, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>
		</sectionGroup>
	</configSections>
  <appSettings>
    <add key="DRIVE_INPUT" value="I:"></add>
    <add key="DRIVE_OUTPUT" value="O:"></add>
    <add key="DRIVE_SHARED" value="S:"></add>
    <add key="DRIVE_APPLI" value="C:"></add>
    <add key="SDK_PATH" value=""></add>
    <add key="DO_MOUNT" value="No"></add>
    
    <add key="IP_LOCAL" value="192.168.1.26"></add>
    <add key="SERVERMGR_IPSHARE" value="192.168.1.25"></add>
    <add key="SERVERMGR_IPWEBSERVER" value="192.168.1.26"></add>
  </appSettings>
	<connectionStrings/>
	<IGMadam>
		<userSecurityAuthority realm="ImageniusAuthentication" provider="IGMadam.DatabaseUserSecurityAuthority, IGMadam" connectionType="System.Data.OleDb.OleDbConnection" connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Imagenius\Testing\IGServer\IGServerApplication\UserAccounts\Imagenius.mdb;" query="SELECT Password FROM Users WHERE UserName=@UserName" exposeClearTextPassword="false"/>
		<!-- The following example of the <userSecurityAuthority> section 
             shows how to tell IGMADAM to use the ASP.NET membership provider
             to authenticate the user. This section only designed to be
             use where the web application is running under ASP.NET 2.0.
             
             NOTE: The ASPNETDB.mdf database in App_Data has the schema installed to
             support Membership but does *not* have any user accounts created. You can
             create these accounts through the ASP.NET Website Administration Tool's
             Security tab. See:
               * http://msdn2.microsoft.com/en-us/library/yy40ytx0.aspx
               * http://msdn2.microsoft.com/en-us/library/ssa0wsyf(VS.80).aspx
             
        <userSecurityAuthority 
            realm="ImageniusAuthentication" 
            provider="MembershipUserSecurityAuthority"
            exposeClearTextPassword="false "/>
            
        -->
		<!-- This section determines the disposition of the Forms 
             authentication. In other words, under what set of conditions is it 
             discriminated (thus-called discriminators) in favor of standard
             HTTP authentication. -->
		<formsAuthenticationDisposition>
			<discriminators all="1">
				<!-- This discriminator helps detect redirection to the Forms 
                     login page. -->
				<discriminator inputExpression="Response.RedirectLocation" pattern="login\.aspx\?returnurl\=" type="IGMadam.RegexDiscriminator"/>
				<!-- These discriminators are based on the various locations
                         and requests for which Forms should be discriminated. 
                         The conditions expressed by these discriminators
                         are OR'ed together in the absence of the all attribute. -->
				<discriminator type="IGMadam.Discriminator">
					<discriminator inputExpression="Request.Url" pattern="ActiveXTest\.html\?" type="IGMadam.RegexDiscriminator"/>
				</discriminator>
			</discriminators>
		</formsAuthenticationDisposition>
	</IGMadam>
	<system.web>
		<sessionState cookieless="false" regenerateExpiredSessionId="true" timeout="30"/>
		<authentication mode="Forms"/>
		<authorization>
			<allow users="?"/>
		</authorization>
		<compilation debug="true" defaultLanguage="c#" targetFramework="4.0">
			<assemblies>
				<add assembly="System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/>
				<add assembly="System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/></assemblies>
		</compilation>
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
			<namespaces>
				<clear/>
				<add namespace="System"/>
				<add namespace="System.Collections"/>
				<add namespace="System.Collections.Generic"/>
				<add namespace="System.Collections.Specialized"/>
				<add namespace="System.Configuration"/>
				<add namespace="System.Text"/>
				<add namespace="System.Text.RegularExpressions"/>
				<add namespace="System.Linq"/>
				<add namespace="System.Xml.Linq"/>
				<add namespace="System.Web"/>
				<add namespace="System.Web.Caching"/>
				<add namespace="System.Web.SessionState"/>
				<add namespace="System.Web.Security"/>
				<add namespace="System.Web.Profile"/>
				<add namespace="System.Web.UI"/>
				<add namespace="System.Web.UI.WebControls"/>
				<add namespace="System.Web.UI.WebControls.WebParts"/>
				<add namespace="System.Web.UI.HtmlControls"/>
			</namespaces>
			<controls>
				<add tagPrefix="nw" namespace="ErrorPopup" assembly="ErrorPopup"/>
				<add tagPrefix="cc1" namespace="System.Web.UI" assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
			</controls>
		</pages>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
		<httpModules>
			<add name="BasicAuthentication" type="IGMadam.BasicAuthenticationModule, IGMadam"/>
		</httpModules>
	</system.web>
</configuration>
